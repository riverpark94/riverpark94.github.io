---
layout: post
title: '[C] 기초1006. 출력하기'
date: 2021-01-29 22:27:44 +0900
subtitle: '1006 : [기초-출력] 출력하기06(설명)'
categories: CODING_TEST
tags: Codestates
comments: true
toc: true
---

> 이번에는 특수문자 출력에 도전하자!!
>
> 다음 문장을 출력하시오.
>
> "!@#$%^&*()"
> (단, 큰따옴표도 함께 출력한다.)

<br>

[Codeup](https://codeup.kr/index.php)의 **[기초 100제](https://codeup.kr/problemsetsol.php?psid=23)** 커리큘럼에서 제공되는 문제입니다. 😀 
{: .notice--warning}

<br>

# 1. Example

### Your output should look something like :

- **input**

  -  없음

- **output ** 
  - "!@#$%^&*()"


<br>

***

# 2. solution

```c
#include <stdio.h>

int main()
{
    char a[20]="\"!@#$%^&*()\"";
    
    printf(a);
}
```

<br>

***

# 마치며

하루에 3문제 기초부터 알고리즘 챌린지 DAY2. 문자열로 이틀 연속 출력만 하니까 심심해서 배열을 넣어줬다.

<br>

#### 새롭게 알게된 것

% 문자는 서식 문자의 시작을 알리는 특수한 문자이므로, %뒤에 다른 옵션이 붙어야 기능을 하게 된다.
하지만 기능이 없는(유효하지 않은) 서식문자가 되는 경우 그냥 그대로 %를 출력하게 된다.

예) printf("%r");  -------> %r이 그대로 출력됨.
But, %d나 %f 등 기능이 있는 문자들은 쓰레기값을 출력하는 것이다.

그런데 %뒤에 아무것도 쓰지 않거나 %뒤에 유효한 서식문자가 되어가는 과정이면 아무것도 출력되지 않는다.

예) printf("%");    ----> %뒤에 옵션이 붙어 서식 문자가 되어가는 중
   printf("%-");   -----> -뒤에 서식 문자가 되어가는 중
   printf("%-1.");   ----> %-1.f? 가 되어가는 중인 경우